//---------------------------------------------------
// Ressource File for CATShapeDesignCommandHeader Class
// En_US
//---------------------------------------------------
//
// ========================================================================================
// ========================================================================================
//							Commandes Geometrical Set
// ========================================================================================
// ========================================================================================
// == GSMBody Change ==
CATShapeDesignCommandHeader.CATShapeDesignChangeBody.Title            = "Change Geometrical Set...";
CATShapeDesignCommandHeader.CATShapeDesignChangeBody.Help             = "Changes a feature of geometrical set";
CATShapeDesignCommandHeader.CATShapeDesignChangeBody.ShortHelp        = "Change Geometrical Set";
CATShapeDesignCommandHeader.CATShapeDesignChangeBody.LongHelp         = "Changes a feature of geometrical set.";
// == GSMBody Remove ==
CATShapeDesignCommandHeader.CATShapeDesignRemoveBody.Title            = "Remove Geometrical Set";
CATShapeDesignCommandHeader.CATShapeDesignRemoveBody.Help             = "Removes geometrical set and keeps its constituents";
CATShapeDesignCommandHeader.CATShapeDesignRemoveBody.ShortHelp        = "Remove Geometrical Set";
CATShapeDesignCommandHeader.CATShapeDesignRemoveBody.LongHelp         = "Removes geometrical set and keeps its constituents.";
// == GSMBody AutoSort ==
CATShapeDesignCommandHeader.CATShapeDesignAutoSortBody.Title          = "AutoSort Geometrical Set";
CATShapeDesignCommandHeader.CATShapeDesignAutoSortBody.Help           = "Sorts automatically the geometrical set";
CATShapeDesignCommandHeader.CATShapeDesignAutoSortBody.ShortHelp      = "AutoSort Geometrical Set";
CATShapeDesignCommandHeader.CATShapeDesignAutoSortBody.LongHelp       = "Sorts automatically the geometrical set.";

// == Check ==
CATShapeDesignCommandHeader.CATGSMUIChecker.Title          = "Check";

//
// ========================================================================================
// ========================================================================================
//							Commandes Wireframe
// ========================================================================================
// ========================================================================================
// == Point == 
CATShapeDesignCommandHeader.CATShapeDesignPoint.Title                 = "Point...";
CATShapeDesignCommandHeader.CATShapeDesignPoint.Help                  = "Creates one or more points";
CATShapeDesignCommandHeader.CATShapeDesignPoint.ShortHelp             = "Point";
CATShapeDesignCommandHeader.CATShapeDesignPoint.LongHelp              = 
"Point
Creates one or more points.";
// == Line == 
CATShapeDesignCommandHeader.CATShapeDesignLine.Title                  = "Line...";
CATShapeDesignCommandHeader.CATShapeDesignLine.Help                   = "Creates a line";
CATShapeDesignCommandHeader.CATShapeDesignLine.ShortHelp              = "Line";
CATShapeDesignCommandHeader.CATShapeDesignLine.LongHelp               = 
"Line
Creates a line.";
// == Axis Line == 
CATShapeDesignCommandHeader.CATSdwAxisLineHdr.Title                  = "Axis...";
CATShapeDesignCommandHeader.CATSdwAxisLineHdr.Help                   = "Creates an axis";
CATShapeDesignCommandHeader.CATSdwAxisLineHdr.ShortHelp              = "Axis";
CATShapeDesignCommandHeader.CATSdwAxisLineHdr.LongHelp               = 
"Axis
Creates an axis.";
// == Plane == 
CATShapeDesignCommandHeader.CATShapeDesignPlane.Title                 = "Plane...";
CATShapeDesignCommandHeader.CATShapeDesignPlane.Help                  = "Creates a plane";
CATShapeDesignCommandHeader.CATShapeDesignPlane.ShortHelp             = "Plane";
CATShapeDesignCommandHeader.CATShapeDesignPlane.LongHelp              = 
"Plane
Creates a plane.";
// == Curve == 
CATShapeDesignCommandHeader.CATShapeDesignCurve.Title                 = "Spline...";
CATShapeDesignCommandHeader.CATShapeDesignCurve.Help                  = "Creates a spline curve";
CATShapeDesignCommandHeader.CATShapeDesignCurve.ShortHelp             = "Spline";
CATShapeDesignCommandHeader.CATShapeDesignCurve.LongHelp              = 
"Spline
Creates a spline curve, possibly on a support element
and with tangency conditions.";
// == Helix == 
CATShapeDesignCommandHeader.CATShapeDesignHelix.Title                 = "Helix...";
CATShapeDesignCommandHeader.CATShapeDesignHelix.Help                  = "Creates an helix";
CATShapeDesignCommandHeader.CATShapeDesignHelix.ShortHelp             = "Helix";
CATShapeDesignCommandHeader.CATShapeDesignHelix.LongHelp              = 
"Helix
Creates a helical curve.";
// == Spiral == 
CATShapeDesignCommandHeader.CATSdwSpiralHdr.Title                     = "Spiral...";
CATShapeDesignCommandHeader.CATSdwSpiralHdr.Help                      = "Creates a spiral";
CATShapeDesignCommandHeader.CATSdwSpiralHdr.ShortHelp                 = "Spiral";
CATShapeDesignCommandHeader.CATSdwSpiralHdr.LongHelp                  = 
"Spiral
Creates a spiral curve.";
// == Spine ==
CATShapeDesignCommandHeader.CATShapeDesignSpine.Title                 = "Spine...";
CATShapeDesignCommandHeader.CATShapeDesignSpine.Help                  = "Creates a spine";
CATShapeDesignCommandHeader.CATShapeDesignSpine.ShortHelp             = "Spine";
CATShapeDesignCommandHeader.CATShapeDesignSpine.LongHelp              = 
"Spine
Creates a spine.";
// == Conic == 
CATShapeDesignCommandHeader.CATShapeDesignConic.Title                 = "Conic...";
CATShapeDesignCommandHeader.CATShapeDesignConic.Help                  = "Creates a Conic";
CATShapeDesignCommandHeader.CATShapeDesignConic.ShortHelp             = "Conic";
CATShapeDesignCommandHeader.CATShapeDesignConic.LongHelp              = 
"Conic
Creates a parabola, hyperbola or ellipse-type curve.";
// == Circle ==
CATShapeDesignCommandHeader.CATShapeDesignCircle.Title                = "Circle...";
CATShapeDesignCommandHeader.CATShapeDesignCircle.Help                 = "Creates a circle or circular arc";
CATShapeDesignCommandHeader.CATShapeDesignCircle.ShortHelp            = "Circle";
CATShapeDesignCommandHeader.CATShapeDesignCircle.LongHelp             = 
"Circle
Creates a circle or circular arc.";
// == Boundary ==
CATShapeDesignCommandHeader.CATShapeDesignBoundary.Title              = "Boundary...";
CATShapeDesignCommandHeader.CATShapeDesignBoundary.Help               = "Creates a boundary from a surface";
CATShapeDesignCommandHeader.CATShapeDesignBoundary.ShortHelp          = "Boundary";
CATShapeDesignCommandHeader.CATShapeDesignBoundary.LongHelp           = 
"Boundary
Creates a boundary from
the edge of a surface";
// == Connect == 
CATShapeDesignCommandHeader.CATShapeDesignConnect.Title               = "Connect Curve...";
CATShapeDesignCommandHeader.CATShapeDesignConnect.Help                = "Creates a connect curve between two curves";
CATShapeDesignCommandHeader.CATShapeDesignConnect.ShortHelp           = "Connect Curve";
CATShapeDesignCommandHeader.CATShapeDesignConnect.LongHelp            = 
"Connect Curve
Creates a connecting curve between two curves
taking continuity constraints into account.";
// == Corner ==
CATShapeDesignCommandHeader.CATShapeDesignCorner.Title                = "Corner...";
CATShapeDesignCommandHeader.CATShapeDesignCorner.Help                 = "Creates a corner between two curves";
CATShapeDesignCommandHeader.CATShapeDesignCorner.ShortHelp            = "Corner";
CATShapeDesignCommandHeader.CATShapeDesignCorner.LongHelp             = 
"Corner
Creates a corner between two curves
or between a point and a curve.";
// == Intersect == 
CATShapeDesignCommandHeader.CATShapeDesignIntersect.Title             = "Intersection...";
CATShapeDesignCommandHeader.CATShapeDesignIntersect.Help              = "Creates geometry by intersecting two geometric elements";
CATShapeDesignCommandHeader.CATShapeDesignIntersect.ShortHelp         = "Intersection";
CATShapeDesignCommandHeader.CATShapeDesignIntersect.LongHelp          = 
"Intersection
Creates geometry by intersecting 
two geometric elements.";
// == Parallel== 
CATShapeDesignCommandHeader.CATShapeDesignParallel.Title              = "Parallel Curve...";
CATShapeDesignCommandHeader.CATShapeDesignParallel.Help               = "Creates a curve that is offset from a reference curve";
CATShapeDesignCommandHeader.CATShapeDesignParallel.ShortHelp          = "Parallel Curve";
CATShapeDesignCommandHeader.CATShapeDesignParallel.LongHelp           = 
"Parallel Curve
Creates a curve offset from a referenced curve,
on a support surface.";
// == Project == 
CATShapeDesignCommandHeader.CATShapeDesignProject.Title               = "Projection...";
CATShapeDesignCommandHeader.CATShapeDesignProject.Help                = "Projects a point or curve onto a support element";
CATShapeDesignCommandHeader.CATShapeDesignProject.ShortHelp           = "Projection";
CATShapeDesignCommandHeader.CATShapeDesignProject.LongHelp            = 
"Projection
Projects a point or curve onto a support element.";
// == Combine == 
CATShapeDesignCommandHeader.CATShapeDesignCombine.Title               = "Combine...";
CATShapeDesignCommandHeader.CATShapeDesignCombine.Help                = "Combines two curves along two directions";
CATShapeDesignCommandHeader.CATShapeDesignCombine.ShortHelp           = "Combine";
CATShapeDesignCommandHeader.CATShapeDesignCombine.LongHelp            = 
"Combine
Creates geometry resulting from the intersection
of the extrusion of two elements along two directions.";
// == ReflectLine == 
CATShapeDesignCommandHeader.CATShapeDesignReflectLine.Title           = "ReflectLine...";
CATShapeDesignCommandHeader.CATShapeDesignReflectLine.Help            = "Creates a reflect line";
CATShapeDesignCommandHeader.CATShapeDesignReflectLine.ShortHelp       = "ReflectLine";
CATShapeDesignCommandHeader.CATShapeDesignReflectLine.LongHelp        = 
"ReflectLine
Creates the reflect line on a support along a direction
with an angle.";
// == Extremum ==
CATShapeDesignCommandHeader.CATShapeDesignExtremum.Title              = "Extremum...";
CATShapeDesignCommandHeader.CATShapeDesignExtremum.Help               = "Gives the extremum point of an element";
CATShapeDesignCommandHeader.CATShapeDesignExtremum.ShortHelp          = "Extremum";
CATShapeDesignCommandHeader.CATShapeDesignExtremum.LongHelp           = 
"Extremum
Creates the extremum point of an element
in a given direction.";
// == ExtremumPolar ==
CATShapeDesignCommandHeader.CATShapeDesignExtremumPolar.Title         = "ExtremumPolar...";
CATShapeDesignCommandHeader.CATShapeDesignExtremumPolar.Help          = "Gives the extremum point of an element in polar coordinates";
CATShapeDesignCommandHeader.CATShapeDesignExtremumPolar.ShortHelp     = "ExtremumPolar";
CATShapeDesignCommandHeader.CATShapeDesignExtremumPolar.LongHelp      = 
"ExtremumPolar
Creates the extremum point of an element
in a given direction in polar coordinates.";
// == Polyline == 
CATShapeDesignCommandHeader.CATSdwLineCornerHdr.Title                     = "Polyline...";
CATShapeDesignCommandHeader.CATSdwLineCornerHdr.Help                      = "Creates a polyline";
CATShapeDesignCommandHeader.CATSdwLineCornerHdr.ShortHelp                 = "Polyline";
CATShapeDesignCommandHeader.CATSdwLineCornerHdr.LongHelp                  = 
"Polyline
Creates a broken line with cornered curves.";
// == 3D Curve Offset== 
CATShapeDesignCommandHeader.CATShapeDesign3DCurveOffset.Title              = "3D Curve Offset...";
CATShapeDesignCommandHeader.CATShapeDesign3DCurveOffset.Help               = "Creates a 3D curve offset";
CATShapeDesignCommandHeader.CATShapeDesign3DCurveOffset.ShortHelp          = "3D Curve Offset";
CATShapeDesignCommandHeader.CATShapeDesign3DCurveOffset.LongHelp           = 
"3D Curve Offset
Creates a curve offset from a referenced curve, a direction
and corner parameters.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Surface
// ========================================================================================
// ========================================================================================
// == Extrude== 
CATShapeDesignCommandHeader.CATShapeDesignExtrude.Title               = "Extrude...";
CATShapeDesignCommandHeader.CATShapeDesignExtrude.Help                = "Creates an extruded surface";
CATShapeDesignCommandHeader.CATShapeDesignExtrude.ShortHelp           = "Extrude";
CATShapeDesignCommandHeader.CATShapeDesignExtrude.LongHelp            = 
"Extrude
Creates a surface by extruding a profile.";

// == Cylinder== 
CATShapeDesignCommandHeader.CATSdwCylinderHdr.Title               = "Cylinder...";
CATShapeDesignCommandHeader.CATSdwCylinderHdr.Help                = "Creates a Cylinder";
CATShapeDesignCommandHeader.CATSdwCylinderHdr.ShortHelp           = "Cylinder";
CATShapeDesignCommandHeader.CATSdwCylinderHdr.LongHelp            = 
"Cylinder
Creates a cylinder with center, radius and two lengths as input.";


// == Revol ==
CATShapeDesignCommandHeader.CATShapeDesignRevol.Title                 = "Revolve...";
CATShapeDesignCommandHeader.CATShapeDesignRevol.Help                  = "Creates a surface by revolving a profile about an axis";
CATShapeDesignCommandHeader.CATShapeDesignRevol.ShortHelp             = "Revolve";
CATShapeDesignCommandHeader.CATShapeDesignRevol.LongHelp              = 
"Revolve
Creates a surface by revolving a profile about an axis.";
// == Sphere ==
CATShapeDesignCommandHeader.CATSdwSphereHdr.Title	                   = "Sphere...";
CATShapeDesignCommandHeader.CATSdwSphereHdr.Help	                   = "Creates a spherical surface";
CATShapeDesignCommandHeader.CATSdwSphereHdr.ShortHelp	                = "Sphere";
CATShapeDesignCommandHeader.CATSdwSphereHdr.LongHelp	                = 
"Sphere
Creates a sphere.";
// == Offset== 
CATShapeDesignCommandHeader.CATShapeDesignOffset.Title                = "Offset...";
CATShapeDesignCommandHeader.CATShapeDesignOffset.Help                 = "Creates a surface that is offset from a reference surface";
CATShapeDesignCommandHeader.CATShapeDesignOffset.ShortHelp            = "Offset";
CATShapeDesignCommandHeader.CATShapeDesignOffset.LongHelp             = 
"Offset
Creates a surface that is offset from a reference surface.";
// == Variable Offset== 
CATShapeDesignCommandHeader.CATSdwVariableOffsetHdr.Title                = "Variable Offset...";
CATShapeDesignCommandHeader.CATSdwVariableOffsetHdr.Help                 = "Creates a variable surface that is offset between other offset surfaces";
CATShapeDesignCommandHeader.CATSdwVariableOffsetHdr.ShortHelp            = "Variable Offset";
CATShapeDesignCommandHeader.CATSdwVariableOffsetHdr.LongHelp             = 
"Variable Offset
Creates a variable surface that is offset between other offset surfaces.";
// == Rough Offset== 
CATShapeDesignCommandHeader.CATSdwRoughOffsetHdr.Title                = "Rough Offset...";
CATShapeDesignCommandHeader.CATSdwRoughOffsetHdr.Help                 = "Creates a surface that is a rough offset from a reference surface";
CATShapeDesignCommandHeader.CATSdwRoughOffsetHdr.ShortHelp            = "Rough Offset";
CATShapeDesignCommandHeader.CATSdwRoughOffsetHdr.LongHelp             = 
"Rough Offset
Creates a rough surface that is offset from a reference surface.";

// == Fill == 
CATShapeDesignCommandHeader.CATShapeDesignFill.Title                  = "Fill...";
CATShapeDesignCommandHeader.CATShapeDesignFill.Help                   = "Creates a fill surface inside a closed boundary";
CATShapeDesignCommandHeader.CATShapeDesignFill.ShortHelp              = "Fill";
CATShapeDesignCommandHeader.CATShapeDesignFill.LongHelp               = 
"Fill
Creates a fill surface inside a closed boundary.";
// == Loft ==
CATShapeDesignCommandHeader.CATShapeDesignLoft.Title                  = "Multi-sections Surface...";
CATShapeDesignCommandHeader.CATShapeDesignLoft.Help                   = "Creates a multi-sections surface";
CATShapeDesignCommandHeader.CATShapeDesignLoft.ShortHelp              = "Multi-sections Surface";
CATShapeDesignCommandHeader.CATShapeDesignLoft.LongHelp               = 
"Multi-sections Surface
Creates a multi-sections surface based on section curves,
and possibly guide curves, along a center curve.";
// == Sweep == 
CATShapeDesignCommandHeader.CATShapeDesignSweep.Title                 = "Sweep...";
CATShapeDesignCommandHeader.CATShapeDesignSweep.Help                  = "Creates a swept surface";
CATShapeDesignCommandHeader.CATShapeDesignSweep.ShortHelp             = "Swept Surface";
CATShapeDesignCommandHeader.CATShapeDesignSweep.LongHelp              = 
"Swept Surface
Creates a surface by sweeping a profile along a curve.";
// == Variational Sweep ==
CATShapeDesignCommandHeader.CATShapeDesignVarSweep.Title              = "Adaptive Sweep...";
CATShapeDesignCommandHeader.CATShapeDesignVarSweep.Help               = "Creates a swept adaptive surface";
CATShapeDesignCommandHeader.CATShapeDesignVarSweep.ShortHelp          = "Adaptive Sweep";
CATShapeDesignCommandHeader.CATShapeDesignVarSweep.LongHelp           =
"Adaptive Sweep
Creates a surface by sweeping a sketch profile and its constraints
along a center curve.";
// == Extract Solide == 
CATShapeDesignCommandHeader.CATShapeDesignExtractSolide.Title         = "Extract...";
CATShapeDesignCommandHeader.CATShapeDesignExtractSolide.Help          = "Extracts a face or a surface edge";
CATShapeDesignCommandHeader.CATShapeDesignExtractSolide.ShortHelp     = "Extract";
CATShapeDesignCommandHeader.CATShapeDesignExtractSolide.LongHelp      = 
"Extract
Extracts a face or a surface edge.";
// == Multiple Extract == 
CATShapeDesignCommandHeader.CATShapeDesignExtractSMultiC.Title        = "Multiple Extract...";
CATShapeDesignCommandHeader.CATShapeDesignExtractSMultiC.Help         = "Extracts a group of elements";
CATShapeDesignCommandHeader.CATShapeDesignExtractSMultiC.ShortHelp    = "Multiple Extract";
CATShapeDesignCommandHeader.CATShapeDesignExtractSMultiC.LongHelp     = 
"Multiple Extract
Extracts a group of elements.";
// == Blend ==
CATShapeDesignCommandHeader.CATShapeDesignBlend.Title                 = "Blend...";
CATShapeDesignCommandHeader.CATShapeDesignBlend.Help                  = "Creates a blend surface";
CATShapeDesignCommandHeader.CATShapeDesignBlend.ShortHelp             = "Blend";
CATShapeDesignCommandHeader.CATShapeDesignBlend.LongHelp              = 
"Blend
Creates a blended surface between two sufaces.";


//	Start 3DPLM Code + JOR
// ========================================================================================
// ========================================================================================
//							Commands - Volumes
// ========================================================================================
// ========================================================================================
// == VolumeExtrude== 
CATShapeDesignCommandHeader.CATSdwVolumeExtrudeHdr.Title               = "Volume Extrude...";
CATShapeDesignCommandHeader.CATSdwVolumeExtrudeHdr.Help                = "Creates an extruded volume";
CATShapeDesignCommandHeader.CATSdwVolumeExtrudeHdr.ShortHelp           = "Volume Extrude";
CATShapeDesignCommandHeader.CATSdwVolumeExtrudeHdr.LongHelp            = 
"Volume Extrude
Creates a volume by extruding a closed planar profile or surface.";

// == Volume Revolve == 
CATShapeDesignCommandHeader.CATSdwVolumeRevolveHdr.Title                  = "Volume Revolve...";
CATShapeDesignCommandHeader.CATSdwVolumeRevolveHdr.Help                   = "Creates a volume of revolution";
CATShapeDesignCommandHeader.CATSdwVolumeRevolveHdr.ShortHelp              = "Volume Revolve";
CATShapeDesignCommandHeader.CATSdwVolumeRevolveHdr.LongHelp               = 
"Volume Revolve 
Creates a volume by revolving about an axis a non self-intersecting closed planar profile,
a surface, or a sketch with an axis.";

// == Volume Loft == 
CATShapeDesignCommandHeader.CATSdwVolumeLoftHdr.Title                  = "Multi-sections Volume...";
CATShapeDesignCommandHeader.CATSdwVolumeLoftHdr.Help                   = "Creates a multi-sections volume";
CATShapeDesignCommandHeader.CATSdwVolumeLoftHdr.ShortHelp              = "Multi-sections Volume";
CATShapeDesignCommandHeader.CATSdwVolumeLoftHdr.LongHelp               = 
"Multi-sections Volume
Creates a multi-sections volume based on section curves,
and possibly guide curves, along a center curve.";


// == Volume Sweep == 
CATShapeDesignCommandHeader.CATSdwVolumeSweepHdr.Title                  = "Volume Sweep...";
CATShapeDesignCommandHeader.CATSdwVolumeSweepHdr.Help                   = "Creates a swept volume";
CATShapeDesignCommandHeader.CATSdwVolumeSweepHdr.ShortHelp              = "Swept Volume";
CATShapeDesignCommandHeader.CATSdwVolumeSweepHdr.LongHelp               = 
"Swept Volume
Creates a volume by sweeping a profile along a curve.";
//	End 3DPLM Code

// == Insert Added Volume ==
CATShapeDesignCommandHeader.InsertBodyWithAddedVolume.Title="Insert added volume...";
CATShapeDesignCommandHeader.InsertBodyWithAddedVolume.Help="Insert selected volumee in an added body";
CATShapeDesignCommandHeader.InsertBodyWithAddedVolume.ShortHelp="Insert selected volume in an added body.";
CATShapeDesignCommandHeader.InsertBodyWithAddedVolumeLongHelp="Insert selected volume in an added body.";

//
// ========================================================================================
// ========================================================================================
//							Commandes Modification
// ========================================================================================
// ========================================================================================
// == Assemble == 
CATShapeDesignCommandHeader.CATShapeDesignAssemble.Title              = "Join...";
CATShapeDesignCommandHeader.CATShapeDesignAssemble.Help               = "Joins curves or surfaces";
CATShapeDesignCommandHeader.CATShapeDesignAssemble.ShortHelp          = "Join";
CATShapeDesignCommandHeader.CATShapeDesignAssemble.LongHelp           = 
"Join
Joins curves or surfaces.";
// == Healing ==
CATShapeDesignCommandHeader.CATShapeDesignHealing.Title               = "Healing...";
CATShapeDesignCommandHeader.CATShapeDesignHealing.Help                = "Heals surfaces";
CATShapeDesignCommandHeader.CATShapeDesignHealing.ShortHelp           = "Healing";
CATShapeDesignCommandHeader.CATShapeDesignHealing.LongHelp            = 
"Healing
Heals surfaces by filling in small gaps between the surfaces.";
// == Untrim ==
CATShapeDesignCommandHeader.CATShapeDesignUntrim.Title                = "Untrim...";
CATShapeDesignCommandHeader.CATShapeDesignUntrim.Help                 = "Untrims previously trimmed surfaces and curves";
CATShapeDesignCommandHeader.CATShapeDesignUntrim.ShortHelp            = "Untrim Surface or Curve";
CATShapeDesignCommandHeader.CATShapeDesignUntrim.LongHelp             = 
"Untrim Surface or Curve
Untrims previously trimmed
surfaces and curves.";
// == Disassemble ==
CATShapeDesignCommandHeader.CATShapeDesignDisassemble.Title           = "Disassemble...";
CATShapeDesignCommandHeader.CATShapeDesignDisassemble.Help            = "Disassembles multi-cell bodies into mono-cell bodies";
CATShapeDesignCommandHeader.CATShapeDesignDisassemble.ShortHelp       = "Disassemble";
CATShapeDesignCommandHeader.CATShapeDesignDisassemble.LongHelp        = 
"Disassemble
Disassembles multi-cell bodies
into mono-cell bodies.";
// == Split == 
CATShapeDesignCommandHeader.CATShapeDesignSplit.Title                 = "Split...";
CATShapeDesignCommandHeader.CATShapeDesignSplit.Help                  = "Cuts and relimits an element using a cutting element";
CATShapeDesignCommandHeader.CATShapeDesignSplit.ShortHelp             = "Split";
CATShapeDesignCommandHeader.CATShapeDesignSplit.LongHelp              = 
"Split
Cuts and relimits an element using a cutting element.";
// == Trim == 
CATShapeDesignCommandHeader.CATShapeDesignTrim.Title                  = "Trim...";
CATShapeDesignCommandHeader.CATShapeDesignTrim.Help                   = "Cuts and assembles two elements";
CATShapeDesignCommandHeader.CATShapeDesignTrim.ShortHelp              = "Trim";
CATShapeDesignCommandHeader.CATShapeDesignTrim.LongHelp               = 
"Trim
Cuts and assembles two elements.";
// == Extrapol == 
CATShapeDesignCommandHeader.CATShapeDesignExtrapol.Title              = "Extrapolate...";
CATShapeDesignCommandHeader.CATShapeDesignExtrapol.Help               = "Creates a surface or curve by extrapolation";
CATShapeDesignCommandHeader.CATShapeDesignExtrapol.ShortHelp          = "Extrapolate";
CATShapeDesignCommandHeader.CATShapeDesignExtrapol.LongHelp           = 
"Extrapolate
Creates a surface by extrapolation of one of its boundaries,
or a curve at one of its endpoints.";
// == Inverse == 
CATShapeDesignCommandHeader.CATShapeDesignInverse.Title               = "Invert Orientation...";
CATShapeDesignCommandHeader.CATShapeDesignInverse.Help                = "Inverts an element's orientation";
CATShapeDesignCommandHeader.CATShapeDesignInverse.ShortHelp           = "Invert Orientation";
CATShapeDesignCommandHeader.CATShapeDesignInverse.LongHelp            = 
"Invert Orientation
Inverts an element's orientation.";
// == Near == 
CATShapeDesignCommandHeader.CATShapeDesignNear.Title                  = "Near...";
CATShapeDesignCommandHeader.CATShapeDesignNear.Help                   = "Extracts the nearest element";
CATShapeDesignCommandHeader.CATShapeDesignNear.ShortHelp              = "Near";
CATShapeDesignCommandHeader.CATShapeDesignNear.LongHelp               = 
"Near
Creates, from the multi-element, 
the element nearest to the reference element.";
// == Law == 
CATShapeDesignCommandHeader.CATShapeDesignLaw.Title                   = "Law...";
CATShapeDesignCommandHeader.CATShapeDesignLaw.Help                    = "Creates a law";
CATShapeDesignCommandHeader.CATShapeDesignLaw.ShortHelp               = "Law";
CATShapeDesignCommandHeader.CATShapeDesignLaw.LongHelp                = 
"Law
Creates a law from two curves : a reference and a definition curve.
Law is created by measuring distance between each point on reference curve 
and its projection on definition curve.";
// == Curve Smooth == 
CATShapeDesignCommandHeader.CATShapeDesignCurveSmooth.Title           = "Curve Smooth...";
CATShapeDesignCommandHeader.CATShapeDesignCurveSmooth.Help            = "Smoothes a curve";
CATShapeDesignCommandHeader.CATShapeDesignCurveSmooth.ShortHelp       = "Curve Smooth";
CATShapeDesignCommandHeader.CATShapeDesignCurveSmooth.LongHelp        = 
"Curve Smooth
Smoothes tangency and curvature discontinuities of a curve under given thresholds.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Michelin
// ========================================================================================
// ========================================================================================
// == RollingOffset == 
CATShapeDesignCommandHeader.CATShapeDesignRollingOffset.Title         = "Rolling Offset...";
CATShapeDesignCommandHeader.CATShapeDesignRollingOffset.Help          = "Creates a rolling offset";
CATShapeDesignCommandHeader.CATShapeDesignRollingOffset.ShortHelp     = "Rolling Offset";
CATShapeDesignCommandHeader.CATShapeDesignRollingOffset.LongHelp      = 
"Rolling Offset
Creates a rolling offset";
//
// ========================================================================================
// ========================================================================================
//							Commandes Generative Shape Optimizer
// ========================================================================================
// ========================================================================================
// == Develop == 
CATShapeDesignCommandHeader.CATSdwDevelopHdr.Title                    = "Develop...";
CATShapeDesignCommandHeader.CATSdwDevelopHdr.Help                     = "Creates a developed curve on a revolution surface";
CATShapeDesignCommandHeader.CATSdwDevelopHdr.ShortHelp                = "Develop";
CATShapeDesignCommandHeader.CATSdwDevelopHdr.LongHelp                 =
"Develop
Creates a developed curve on a revolution surface";
// == Develop == 
CATShapeDesignCommandHeader.CATSdwUnfoldHdr.Title                    = "Unfold...";
CATShapeDesignCommandHeader.CATSdwUnfoldHdr.Help                     = "Creates a unfolded surface";
CATShapeDesignCommandHeader.CATSdwUnfoldHdr.ShortHelp                = "Unfold";
CATShapeDesignCommandHeader.CATSdwUnfoldHdr.LongHelp                 =
"Unfold
Creates a Unfolded surface";

// == Junction == 
CATShapeDesignCommandHeader.CATSdwJunctionHdr.Title                   = "Junction...";
CATShapeDesignCommandHeader.CATSdwJunctionHdr.Help                    = "Creates a junction";
CATShapeDesignCommandHeader.CATSdwJunctionHdr.ShortHelp               = "Junction";
CATShapeDesignCommandHeader.CATSdwJunctionHdr.LongHelp                =
"Junction
Creates a junction";
// == Bump == 
CATShapeDesignCommandHeader.CATSdwBumpHdr.Title                       = "Bump...";
CATShapeDesignCommandHeader.CATSdwBumpHdr.Help                        = "Creates a bump";
CATShapeDesignCommandHeader.CATSdwBumpHdr.ShortHelp                   = "Bump";
CATShapeDesignCommandHeader.CATSdwBumpHdr.LongHelp                    =
"Bump
Creates a bump";
// == Wrap Curve == 
CATShapeDesignCommandHeader.CATSdwWrapCurveHdr.Title                  = "WrapCurve";
CATShapeDesignCommandHeader.CATSdwWrapCurveHdr.Help                   = "Creates a Wrap Curve";
CATShapeDesignCommandHeader.CATSdwWrapCurveHdr.ShortHelp              = "WrapCurve";
CATShapeDesignCommandHeader.CATSdwWrapCurveHdr.LongHelp               =
"Wrap Curve
Creates a Wrap Surface";
// == Wrap Surface == 
CATShapeDesignCommandHeader.CATSdwWrapSurfaceHdr.Title                  = "WrapSurface";
CATShapeDesignCommandHeader.CATSdwWrapSurfaceHdr.Help                   = "Creates a Wrap Surface";
CATShapeDesignCommandHeader.CATSdwWrapSurfaceHdr.ShortHelp              = "WrapSurface";
CATShapeDesignCommandHeader.CATSdwWrapSurfaceHdr.LongHelp               =
"Wrap Surface
Creates a Wrap Surface";
// == SeatDiabolo == 
CATShapeDesignCommandHeader.CATSdwSeatDiaboloHdr.Title                   = "Diabolo...";
CATShapeDesignCommandHeader.CATSdwSeatDiaboloHdr.Help                    = "Creates a diabolo-type surface between a seat and a base surface";
CATShapeDesignCommandHeader.CATSdwSeatDiaboloHdr.ShortHelp               = "Diabolo";
CATShapeDesignCommandHeader.CATSdwSeatDiaboloHdr.LongHelp                =
"Diabolo
Creates a diabolo-type surface between a seat and a base surface";
// == Shape Morphing == 
CATShapeDesignCommandHeader.CATSdwShapeMorphingHdr.Title                  = "ShapeMorphing";
CATShapeDesignCommandHeader.CATSdwShapeMorphingHdr.Help                   = "Creates a Shape Morphing";
CATShapeDesignCommandHeader.CATSdwShapeMorphingHdr.ShortHelp              = "ShapeMorphing";
CATShapeDesignCommandHeader.CATSdwShapeMorphingHdr.LongHelp               =
"Shape Morphing
Creates a Shape Morphing";
//
// ========================================================================================
// ========================================================================================
//							Commandes Fillet
// ========================================================================================
// ========================================================================================
// == Fillet == 
CATShapeDesignCommandHeader.CATShapeDesignFillet.Title                = "Shape Fillet...";
CATShapeDesignCommandHeader.CATShapeDesignFillet.Help                 = "Creates a fillet between two surfaces";
CATShapeDesignCommandHeader.CATShapeDesignFillet.ShortHelp            = "Shape Fillet";
CATShapeDesignCommandHeader.CATShapeDesignFillet.LongHelp             = 
"Shape Fillet
Creates a fillet between two surfaces.";
// == FilletEdge == 
CATShapeDesignCommandHeader.CATShapeDesignFilletEdge.Title            = "Edge Fillet...";
CATShapeDesignCommandHeader.CATShapeDesignFilletEdge.Help             = "Creates an edge fillet";
CATShapeDesignCommandHeader.CATShapeDesignFilletEdge.ShortHelp        = "Edge Fillet";
CATShapeDesignCommandHeader.CATShapeDesignFilletEdge.LongHelp         = 
"Edge Fillet
Creates a fillet on a surface's edge.";
// == FilletVariable =
CATShapeDesignCommandHeader.CATShapeDesignFilletVar.Title             = "Variable Fillet...";
CATShapeDesignCommandHeader.CATShapeDesignFilletVar.Help              = "Creates a variable radius fillet";
CATShapeDesignCommandHeader.CATShapeDesignFilletVar.ShortHelp         = "Variable Radius Fillet";
CATShapeDesignCommandHeader.CATShapeDesignFilletVar.LongHelp          = 
"Variable Radius Fillet
Creates a fillet whose radius varies at each selected point.";
// == Fillet Face == 
CATShapeDesignCommandHeader.CATShapeDesignFilletFace.Title            = "Face-Face Fillet...";
CATShapeDesignCommandHeader.CATShapeDesignFilletFace.Help             = "Creates a face-face fillet by selecting two faces";
CATShapeDesignCommandHeader.CATShapeDesignFilletFace.ShortHelp        = "Face-Face Fillet";
CATShapeDesignCommandHeader.CATShapeDesignFilletFace.LongHelp         = 
"Face-Face Fillet
Creates a fillet between two non-intersecting faces.";
// == Fillet Tritangent == 
CATShapeDesignCommandHeader.CATShapeDesignTriFillet.Title             = "Tritangent Fillet...";
CATShapeDesignCommandHeader.CATShapeDesignTriFillet.Help              = "Creates a fillet by removing the face you specify";
CATShapeDesignCommandHeader.CATShapeDesignTriFillet.ShortHelp         = "Tritangent Fillet";
CATShapeDesignCommandHeader.CATShapeDesignTriFillet.LongHelp          = 
"Tritangent Fillet
Creates a tritangent fillet from three
faces you specify, by removing one.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Transformation
// ========================================================================================
// ========================================================================================
// == Affinity == 
CATShapeDesignCommandHeader.CATShapeDesignAffinity.Title              = "Affinity...";
CATShapeDesignCommandHeader.CATShapeDesignAffinity.Help               = "Transforms an element by affinity";
CATShapeDesignCommandHeader.CATShapeDesignAffinity.ShortHelp          = "Affinity";
CATShapeDesignCommandHeader.CATShapeDesignAffinity.LongHelp           = 
"Affinity
Transforms an element by affinity.";
// == Rotate == 
CATShapeDesignCommandHeader.CATShapeDesignRotate.Title                = "Rotate...";
CATShapeDesignCommandHeader.CATShapeDesignRotate.Help                 = "Rotates an element about an axis";
CATShapeDesignCommandHeader.CATShapeDesignRotate.ShortHelp            = "Rotate";
CATShapeDesignCommandHeader.CATShapeDesignRotate.LongHelp             = 
"Rotate
Rotates an element about an axis.";
// == Symmetry == 
CATShapeDesignCommandHeader.CATShapeDesignSymmetry.Title              = "Symmetry...";
CATShapeDesignCommandHeader.CATShapeDesignSymmetry.Help               = "Transforms an element by symmetry";
CATShapeDesignCommandHeader.CATShapeDesignSymmetry.ShortHelp          = "Symmetry";
CATShapeDesignCommandHeader.CATShapeDesignSymmetry.LongHelp           = 
"Symmetry
Creates a symmetrical element 
in relation to a reference element.";
// == AxisToAxis == 
CATShapeDesignCommandHeader.CATSdwAxisToAxisHdr.Title         = "Axis To Axis...";
CATShapeDesignCommandHeader.CATSdwAxisToAxisHdr.Help          = "Transforms an element from an axis system to another";
CATShapeDesignCommandHeader.CATSdwAxisToAxisHdr.ShortHelp     = "Axis To Axis";
CATShapeDesignCommandHeader.CATSdwAxisToAxisHdr.LongHelp      = 
"Axis To Axis
Transforms an element from an axis system to another";
// == Scaling == 
CATShapeDesignCommandHeader.CATShapeDesignScaling.Title               = "Scaling...";
CATShapeDesignCommandHeader.CATShapeDesignScaling.Help                = "Transforms an element by scaling";
CATShapeDesignCommandHeader.CATShapeDesignScaling.ShortHelp           = "Scaling";
CATShapeDesignCommandHeader.CATShapeDesignScaling.LongHelp            = 
"Scaling
Transforms an element by scaling.";
// == Translate == 
CATShapeDesignCommandHeader.CATShapeDesignTranslate.Title             = "Translate...";
CATShapeDesignCommandHeader.CATShapeDesignTranslate.Help              = "Translates an element along a direction";
CATShapeDesignCommandHeader.CATShapeDesignTranslate.ShortHelp         = "Translate";
CATShapeDesignCommandHeader.CATShapeDesignTranslate.LongHelp          = 
"Translate
Translates an element along a direction.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Multiple
// ========================================================================================
// ========================================================================================
// == Commande multiple ==
CATShapeDesignCommandHeader.CATShapeDesignMultiple.Title              = "Object Repetition...";
CATShapeDesignCommandHeader.CATShapeDesignMultiple.Help               = "Repeats several times the creation of an object";
CATShapeDesignCommandHeader.CATShapeDesignMultiple.ShortHelp          = "Object Repetition";
CATShapeDesignCommandHeader.CATShapeDesignMultiple.LongHelp           = 
"Object Repetition :
Creates several instances of an object at a time.";
// == Commande multiple de point
CATShapeDesignCommandHeader.CATShapeDesignMultiplePoint.Title         = "Points and Planes Repetition...";
CATShapeDesignCommandHeader.CATShapeDesignMultiplePoint.Help          = "Repeats several times the creation of points or planes";
CATShapeDesignCommandHeader.CATShapeDesignMultiplePoint.ShortHelp     = "Points and Planes Repetition";
CATShapeDesignCommandHeader.CATShapeDesignMultiplePoint.LongHelp      = 
"Points & Planes Repetition :
Creates several instances of points and planes at a time.";
// == Commande multiple de planes
CATShapeDesignCommandHeader.CATSdwMultiplePlaneHdr.Title              = "Planes Between...";
CATShapeDesignCommandHeader.CATSdwMultiplePlaneHdr.Help               = "Repeats several times the creation of planes between two others";
CATShapeDesignCommandHeader.CATSdwMultiplePlaneHdr.ShortHelp          = "Planes Repetition";
CATShapeDesignCommandHeader.CATSdwMultiplePlaneHdr.LongHelp           = 
"Planes Repetition :
Creates several instances of equidistant planes 
between two others at a time.";
//
// ========================================================================================
// ========================================================================================
//							Commande Thickness
// ========================================================================================
// ========================================================================================
// == Commande Thickness ==
CATShapeDesignCommandHeader.CATSdwThicknessHdr.Title              = "Thin Parts Attribute...";
CATShapeDesignCommandHeader.CATSdwThicknessHdr.Help               = "Defines thin parts attribute";
CATShapeDesignCommandHeader.CATSdwThicknessHdr.ShortHelp          = "Thin Parts Attribute";
CATShapeDesignCommandHeader.CATSdwThicknessHdr.LongHelp           = 
"Thin Parts Attribute :
Definition of thin parts attribute.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Replication avancee
// ========================================================================================
// ========================================================================================
// == Duplicate Body== 
CATShapeDesignCommandHeader.CATShapeDesignDuplicateBody.Title         = "Duplicate Geometrical Set";
CATShapeDesignCommandHeader.CATShapeDesignDuplicateBody.Help          = "Duplicates a geometrical set";
CATShapeDesignCommandHeader.CATShapeDesignDuplicateBody.ShortHelp     = "Duplicate Geometrical Set";
CATShapeDesignCommandHeader.CATShapeDesignDuplicateBody.LongHelp      = 
"Duplicate Geometrical Set
Allows the duplication of any geometrical set
with the selection of new inputs.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Pattern de PartDesign
// ========================================================================================
// ========================================================================================
// == Rectangular Pattern == 
CATShapeDesignCommandHeader.CATShapeDesignRectPattern.Title           = "Wireframe Rectangular Pattern...";
CATShapeDesignCommandHeader.CATShapeDesignRectPattern.Help            = "Creates a rectangular pattern to repeat a feature.";
CATShapeDesignCommandHeader.CATShapeDesignRectPattern.ShortHelp       = "Wireframe Rectangular Pattern";
CATShapeDesignCommandHeader.CATShapeDesignRectPattern.LongHelp        = 
"Rectangular Pattern
Creates a rectangular pattern
to repeat a feature.";
// == Circular Pattern == 
CATShapeDesignCommandHeader.CATShapeDesignCircPattern.Title           = "Wireframe Circular Pattern...";
CATShapeDesignCommandHeader.CATShapeDesignCircPattern.Help            = "Creates a circular pattern to repeat a feature.";
CATShapeDesignCommandHeader.CATShapeDesignCircPattern.ShortHelp       = "Wireframe Circular Pattern";
CATShapeDesignCommandHeader.CATShapeDesignCircPattern.LongHelp        = 
"Circular Pattern
Creates a circular pattern
to repeat a feature.";
//
// ========================================================================================
// ========================================================================================
//							Commandes User Defined Feature
// ========================================================================================
// ========================================================================================
// == Udfs Creation ==
CATShapeDesignCommandHeader.CATShapeDesignUdf1.Title                  = "Userfeature Creation...";
CATShapeDesignCommandHeader.CATShapeDesignUdf1.Help                   = "Creates a userfeature";
CATShapeDesignCommandHeader.CATShapeDesignUdf1.ShortHelp              = "Userfeature Creation";
CATShapeDesignCommandHeader.CATShapeDesignUdf1.LongHelp               = 
"Userfeature Creation
Creates a userfeature.";
// == Udfs Insantiation ==
CATShapeDesignCommandHeader.CATShapeDesignUdf2.Title                  = "Userfeature Instantiation...";
CATShapeDesignCommandHeader.CATShapeDesignUdf2.Help                   = "Instantiate a defined userfeature stored in a part";
CATShapeDesignCommandHeader.CATShapeDesignUdf2.ShortHelp              = "Userfeature Instantiation";
CATShapeDesignCommandHeader.CATShapeDesignUdf2.LongHelp               = 
"Userfeature Instantiation
Instantiate a pre-defined userfeature stored in a part or a catalog.";
//
// ========================================================================================
// ========================================================================================
//							Commandes relatives aux groupes
// ========================================================================================
// ========================================================================================
// == Group Create == 
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupCreate.Title       = "Create Group...";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupCreate.Help        = "Creates a group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupCreate.ShortHelp   = "Create Group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupCreate.LongHelp    = 
"Create Group
Creates a group from the features selected in the specification tree.";
// == Group Edit ==
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupEdit.Title         = "Edit Group...";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupEdit.Help          = "Edits a group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupEdit.ShortHelp     = "Edit Group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupEdit.LongHelp      = 
"Edit Group
Modifies the name of a group,
its components, or removes it.";
// == Group Expand ==
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupExpand.Title       = "Expand Group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupExpand.Help        = "Expands a group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupExpand.ShortHelp   = "Expand Group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupExpand.LongHelp    = 
"Expand Group
Expands a group to show its components.";
// == Group Collapse ==
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupCollapse.Title     = "Collapse Group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupCollapse.Help      = "Collapses a group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupCollapse.ShortHelp = "Collapse Group";
CATShapeDesignCommandHeader.CATShapeDesignVisuGroupCollapse.LongHelp  = 
"Collapse Group
Collapses a group to hide its components.";
//
// ========================================================================================
// ========================================================================================
//							Commandes relatives au show/hide
// ========================================================================================
// ========================================================================================
// == Show ==
CATShapeDesignCommandHeader.CATShapeDesignShow.Title                  = "Show";
CATShapeDesignCommandHeader.CATShapeDesignShow.Help                   = "Shows a feature";
CATShapeDesignCommandHeader.CATShapeDesignShow.ShortHelp              = "Show";
CATShapeDesignCommandHeader.CATShapeDesignShow.LongHelp               = 
"Show
Shows a feature";
// == Hide ==
CATShapeDesignCommandHeader.CATShapeDesignHide.Title                  = "Hide";
CATShapeDesignCommandHeader.CATShapeDesignHide.Help                   = "Hides a feature";
CATShapeDesignCommandHeader.CATShapeDesignHide.ShortHelp              = "Hide";
CATShapeDesignCommandHeader.CATShapeDesignHide.LongHelp               = 
"Hide
Hides a feature";
//
// ========================================================================================
// ========================================================================================
//							Commandes d'analyse de FreeStyle
// ========================================================================================
// ========================================================================================
// == Connect Checker ==
CATShapeDesignCommandHeader.CATShapeDesignConnectChecker.Title        = "Connect Checker";
CATShapeDesignCommandHeader.CATShapeDesignConnectChecker.Help         = "Checks surface connections";
CATShapeDesignCommandHeader.CATShapeDesignConnectChecker.ShortHelp    = "Connect Checker";
CATShapeDesignCommandHeader.CATShapeDesignConnectChecker.LongHelp     = 
"Connect Checker :
Performs a connection analysis
between two surfaces: distance,
angle, or curvature analysis.";
// == Analyse Gaussienne ==
CATShapeDesignCommandHeader.CATShapeDesignGaussCurvature.Title        = "Surfacic Curvature Analysis";
CATShapeDesignCommandHeader.CATShapeDesignGaussCurvature.Help         = "Analyzes the Gaussian curvature on shape";
CATShapeDesignCommandHeader.CATShapeDesignGaussCurvature.ShortHelp    = "Surfacic Curvature Analysis";
CATShapeDesignCommandHeader.CATShapeDesignGaussCurvature.LongHelp     = 
"Gaussian Curvature
Maps a color texture on a surface
according to the curvature in each point.";
// == Draft Analyse ==
CATShapeDesignCommandHeader.CATShapeDesignDraftAnalysis.Title         = "Feature Draft Analysis";
CATShapeDesignCommandHeader.CATShapeDesignDraftAnalysis.Help          = "Analyses the draft direction on selected surfaces";
CATShapeDesignCommandHeader.CATShapeDesignDraftAnalysis.ShortHelp     = "Feature Draft Analysis";
CATShapeDesignCommandHeader.CATShapeDesignDraftAnalysis.LongHelp      = 
"Feature Draft Analysis
Maps a color texture on surfaces according to
the delta angle value between the normal vector
and the draft direction on each surface point.";
// == Curve Checker ==
CATShapeDesignCommandHeader.CATSdwCurveCheckerHdr.Title               = "Curve Connect Checker";
CATShapeDesignCommandHeader.CATSdwCurveCheckerHdr.Help                = "Checks curve connections";
CATShapeDesignCommandHeader.CATSdwCurveCheckerHdr.ShortHelp           = "Curve Connect Checker";
CATShapeDesignCommandHeader.CATSdwCurveCheckerHdr.LongHelp            = 
"Curve Connect Checker :
Performs a connection analysis
between curves: distance,
angle, or curvature analysis.";
// == Porcupine Analysis ==
CATShapeDesignCommandHeader.CATSdwPorcAnalysisHdr.Title               = "Porcupine Analysis";
CATShapeDesignCommandHeader.CATSdwPorcAnalysisHdr.Help                = "Performs a porcupine curvature analysis on any curve";
CATShapeDesignCommandHeader.CATSdwPorcAnalysisHdr.ShortHelp           = "Porcupine Curvature Analysis";
CATShapeDesignCommandHeader.CATSdwPorcAnalysisHdr.LongHelp            =
"Porcupine Curvature Analysis :
Analyzes the curvature of
a set of curves using
a porcupine representation.";
// == Apply Dress-Up ==
CATShapeDesignCommandHeader.CATSdwVisuShowHdr.Title				      = "Apply Dress-Up";
CATShapeDesignCommandHeader.CATSdwVisuShowHdr.Help					  = "Applies chosen dress-up options on current selection";
CATShapeDesignCommandHeader.CATSdwVisuShowHdr.ShortHelp				  = "Apply Dress-Up";
CATShapeDesignCommandHeader.CATSdwVisuShowHdr.LongHelp			      =
"Apply Dress-Up
Applies the pre-defined dress-up options
on the currently selected elements.";
// == Remove Dress-Up ==
CATShapeDesignCommandHeader.CATSdwVisuHideHdr.Title				      = "Remove Dress-Up";
CATShapeDesignCommandHeader.CATSdwVisuHideHdr.Help				      = "Removes chosen dress-up options on current selection";
CATShapeDesignCommandHeader.CATSdwVisuHideHdr.ShortHelp				  = "Remove Dress-Up";
CATShapeDesignCommandHeader.CATSdwVisuHideHdr.LongHelp				  =
"Remove Dress-Up
Removes the pre-defined dress-up options
on the currently selected elements.";
// == Geometry Info ==
CATShapeDesignCommandHeader.CATSdwGeometryInfoHdr.Title               = "Geometric Information";
CATShapeDesignCommandHeader.CATSdwGeometryInfoHdr.Help                = "Gives a geometric information on a selected face/edge";
CATShapeDesignCommandHeader.CATSdwGeometryInfoHdr.ShortHelp           = "Geometric Information";
CATShapeDesignCommandHeader.CATSdwGeometryInfoHdr.LongHelp            =
"Geometric Information :
Gives a geometric information on a selected face/edge";

// == IsoParametric Curve ==
CATShapeDesignCommandHeader.CATSdwIsoparamCrvHdr.Title = "Isoparametric Curve";
CATShapeDesignCommandHeader.CATSdwIsoparamCrvHdr.ShortHelp = "Isoparametric Curve";
CATShapeDesignCommandHeader.CATSdwIsoparamCrvHdr.Help = "Creates isoparametric curves on a support";
CATShapeDesignCommandHeader.CATSdwIsoparamCrvHdr.LongHelp =
"Isoparametric Curve
Creates isoparametric curves on a support";

//
// ========================================================================================
// ========================================================================================
//							Commandes Wireframe pour FSS
// ========================================================================================
// ========================================================================================
// == Point == 
CATShapeDesignCommandHeader.CATGSDPointDatum.Title                    = "Point...";
CATShapeDesignCommandHeader.CATGSDPointDatum.Help                     = "Creates one or more points";
CATShapeDesignCommandHeader.CATGSDPointDatum.ShortHelp                = "Point";
CATShapeDesignCommandHeader.CATGSDPointDatum.LongHelp                 = 
"Point
Creates one or more points.";
// == Line == 
CATShapeDesignCommandHeader.CATGSDLineDatum.Title                     = "Line...";
CATShapeDesignCommandHeader.CATGSDLineDatum.Help                      = "Creates a line";
CATShapeDesignCommandHeader.CATGSDLineDatum.ShortHelp                 = "Line";
CATShapeDesignCommandHeader.CATGSDLineDatum.LongHelp                  = 
"Line
Creates a line.";
// == Plane == 
CATShapeDesignCommandHeader.CATGSDPlaneDatum.Title                    = "Plane...";
CATShapeDesignCommandHeader.CATGSDPlaneDatum.Help                     = "Creates a plane";
CATShapeDesignCommandHeader.CATGSDPlaneDatum.ShortHelp                = "Plane";
CATShapeDesignCommandHeader.CATGSDPlaneDatum.LongHelp                 = 
"Plane
Creates a plane.";
// == Circle == 
CATShapeDesignCommandHeader.CATGSDCircleDatum.Title                   = "Circle...";
CATShapeDesignCommandHeader.CATGSDCircleDatum.Help                    = "Creates a circle or circular arc";
CATShapeDesignCommandHeader.CATGSDCircleDatum.ShortHelp               = "Circle";
CATShapeDesignCommandHeader.CATGSDCircleDatum.LongHelp                = 
"Circle
Creates a circle or circular arc.";
// == Boundary == 
CATShapeDesignCommandHeader.CATGSDBoundaryDatum.Title                 = "Boundary...";
CATShapeDesignCommandHeader.CATGSDBoundaryDatum.Help                  = "Creates a boundary from a surface";
CATShapeDesignCommandHeader.CATGSDBoundaryDatum.ShortHelp             = "Boundary";
CATShapeDesignCommandHeader.CATGSDBoundaryDatum.LongHelp              = 
"Boundary
Creates a boundary from
the edge of a surface.";
// == Corner == 
CATShapeDesignCommandHeader.CATGSDCornerDatum.Title                   = "Corner...";
CATShapeDesignCommandHeader.CATGSDCornerDatum.Help                    = "Creates a corner between two curves";
CATShapeDesignCommandHeader.CATGSDCornerDatum.ShortHelp               = "Corner";
CATShapeDesignCommandHeader.CATGSDCornerDatum.LongHelp                = 
"Corner
Creates a corner between two curves
or between a point and a curve.";
// == Intersect == 
CATShapeDesignCommandHeader.CATGSDIntersectDatum.Title                = "Intersection...";
CATShapeDesignCommandHeader.CATGSDIntersectDatum.Help                 = "Creates geometry by intersecting two geometric elements";
CATShapeDesignCommandHeader.CATGSDIntersectDatum.ShortHelp            = "Intersection";
CATShapeDesignCommandHeader.CATGSDIntersectDatum.LongHelp             = 
"Intersection
Creates geometry by intersecting 
two geometric elements.";
// == Parallel == 
CATShapeDesignCommandHeader.CATGSDParallelDatum.Title                 = "Parallel Curve...";
CATShapeDesignCommandHeader.CATGSDParallelDatum.Help                  = "Creates a curve that is offset from a reference";
CATShapeDesignCommandHeader.CATGSDParallelDatum.ShortHelp             = "Parallel Curve";
CATShapeDesignCommandHeader.CATGSDParallelDatum.LongHelp              = 
"Parallel Curve
Creates a curve offset from a referenced curve,
on a support surface.";
// == Project == 
CATShapeDesignCommandHeader.CATGSDProjectDatum.Title                  = "Projection...";
CATShapeDesignCommandHeader.CATGSDProjectDatum.Help                   = "Projects a point or curve onto a support element";
CATShapeDesignCommandHeader.CATGSDProjectDatum.ShortHelp              = "Projection";
CATShapeDesignCommandHeader.CATGSDProjectDatum.LongHelp               = 
"Projection
Projects a point or curve onto a support element.";
// == Combine ==
CATShapeDesignCommandHeader.CATGSDCombineDatum.Title                  = "Combine...";
CATShapeDesignCommandHeader.CATGSDCombineDatum.Help                   = "Combines two curves along two directions";
CATShapeDesignCommandHeader.CATGSDCombineDatum.ShortHelp              = "Combine";
CATShapeDesignCommandHeader.CATGSDCombineDatum.LongHelp               =
"Combine
Creates geometry resulting from the intersection
of the extrusion of two elements along two directions.";
// == Conic ==
CATShapeDesignCommandHeader.CATGSDConicDatum.Title                    = "Conic...";
CATShapeDesignCommandHeader.CATGSDConicDatum.Help                     = "Creates a conical curve";
CATShapeDesignCommandHeader.CATGSDConicDatum.ShortHelp                = "Conic";
CATShapeDesignCommandHeader.CATGSDConicDatum.LongHelp                 = 
"Conic
Creates a parabola, hyperbola or ellipse-type curve.";
// == Helix ==
CATShapeDesignCommandHeader.CATGSDHelixDatum.Title                    = "Helix...";
CATShapeDesignCommandHeader.CATGSDHelixDatum.Help                     = "Creates an helix";
CATShapeDesignCommandHeader.CATGSDHelixDatum.ShortHelp                = "Helix";
CATShapeDesignCommandHeader.CATGSDHelixDatum.LongHelp                 = 
"Helix
Creates a helical curve.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Surfaciques pour FSS
// ========================================================================================
// ========================================================================================
// == Revol == 
CATShapeDesignCommandHeader.CATSdwRevolDatumHdr.Title                 = "Revolve...";
CATShapeDesignCommandHeader.CATSdwRevolDatumHdr.Help                  = "Creates a surface by revolving a profile about an axis";
CATShapeDesignCommandHeader.CATSdwRevolDatumHdr.ShortHelp             = "Revolve";
CATShapeDesignCommandHeader.CATSdwRevolDatumHdr.LongHelp              = 
"Revolve
Creates a surface by revolving a profile about an axis.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Modification pour FSS
// ========================================================================================
// ========================================================================================
// == Assemble == 
CATShapeDesignCommandHeader.CATGSDAssembleDatum.Title                 = "Join...";
CATShapeDesignCommandHeader.CATGSDAssembleDatum.Help                  = "Joins curves or surfaces";
CATShapeDesignCommandHeader.CATGSDAssembleDatum.ShortHelp             = "Join";
CATShapeDesignCommandHeader.CATGSDAssembleDatum.LongHelp              = 
"Join
Joins curves or surfaces.";
// == Split == 
CATShapeDesignCommandHeader.CATGSDSplitDatum.Title                    = "Split...";
CATShapeDesignCommandHeader.CATGSDSplitDatum.Help                     = "Cuts and relimits an element using a cutting element";
CATShapeDesignCommandHeader.CATGSDSplitDatum.ShortHelp                = "Split";
CATShapeDesignCommandHeader.CATGSDSplitDatum.LongHelp                 = 
"Split
Cuts and relimits an element using a cutting element.";
// == Trim == 
CATShapeDesignCommandHeader.CATGSDTrimDatum.Title                     = "Trim...";
CATShapeDesignCommandHeader.CATGSDTrimDatum.Help                      = "Cuts and assembles two elements";
CATShapeDesignCommandHeader.CATGSDTrimDatum.ShortHelp                 = "Trim";
CATShapeDesignCommandHeader.CATGSDTrimDatum.LongHelp                  = 
"Trim
Cuts and assembles two elements.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Transformation pour FSS
// ========================================================================================
// ========================================================================================
// == Affinity == 
CATShapeDesignCommandHeader.CATGSDAffinityDatum.Title                 = "Affinity...";
CATShapeDesignCommandHeader.CATGSDAffinityDatum.Help                  = "Transforms an element by affinity";
CATShapeDesignCommandHeader.CATGSDAffinityDatum.ShortHelp             = "Affinity";
CATShapeDesignCommandHeader.CATGSDAffinityDatum.LongHelp              = 
"Affinity
Transforms an element by affinity.";
// == Rotate == 
CATShapeDesignCommandHeader.CATGSDRotateDatum.Title                   = "Rotate...";
CATShapeDesignCommandHeader.CATGSDRotateDatum.Help                    = "Rotates an element about an axis";
CATShapeDesignCommandHeader.CATGSDRotateDatum.ShortHelp               = "Rotate";
CATShapeDesignCommandHeader.CATGSDRotateDatum.LongHelp                = 
"Rotate
Rotates an element about an axis.";
// == Symmetry == 
CATShapeDesignCommandHeader.CATGSDSymmetryDatum.Title                 = "Symmetry...";
CATShapeDesignCommandHeader.CATGSDSymmetryDatum.Help                  = "Transforms an element by symmetry";
CATShapeDesignCommandHeader.CATGSDSymmetryDatum.ShortHelp             = "Symmetry";
CATShapeDesignCommandHeader.CATGSDSymmetryDatum.LongHelp              = 
"Symmetry
Creates a symmetrical an element 
in relation to a reference element.";
// == Scaling == 
CATShapeDesignCommandHeader.CATGSDScalingDatum.Title                  = "Scaling...";
CATShapeDesignCommandHeader.CATGSDScalingDatum.Help                   = "Transforms an element by scaling";
CATShapeDesignCommandHeader.CATGSDScalingDatum.ShortHelp              = "Scaling";
CATShapeDesignCommandHeader.CATGSDScalingDatum.LongHelp               = 
"Scaling
Transforms an element by scaling.";
// == Translation == 
CATShapeDesignCommandHeader.CATGSDTranslateDatum.Title                = "Translate...";
CATShapeDesignCommandHeader.CATGSDTranslateDatum.Help                 = "Translates an element along a direction";
CATShapeDesignCommandHeader.CATGSDTranslateDatum.ShortHelp            = "Translate";
CATShapeDesignCommandHeader.CATGSDTranslateDatum.LongHelp             = 
"Translate
Translates an element along a direction.";
// == AxisToAxis == 
CATShapeDesignCommandHeader.CATSdwAxisToAxisDatumHdr.Title         = "Axis To Axis...";
CATShapeDesignCommandHeader.CATSdwAxisToAxisDatumHdr.Help          = "Transforms an element from an axis system to another";
CATShapeDesignCommandHeader.CATSdwAxisToAxisDatumHdr.ShortHelp     = "Axis To Axis";
CATShapeDesignCommandHeader.CATSdwAxisToAxisDatumHdr.LongHelp      = 
"Axis To Axis
Transforms an element from an axis system to another";
//
// ========================================================================================
// ========================================================================================
//							Commandes Modification pour FSP
// ========================================================================================
// ========================================================================================
// == Curve == 
CATShapeDesignCommandHeader.CATGSDCurveDatum.Title						= "Spline...";
CATShapeDesignCommandHeader.CATGSDCurveDatum.Help						= "Creates a spline curve";
CATShapeDesignCommandHeader.CATGSDCurveDatum.ShortHelp					= "Spline";
CATShapeDesignCommandHeader.CATGSDCurveDatum.LongHelp					= 
"Spline
Creates a spline curve, possibly on a support element
and with tangency conditions.";
//
// ========================================================================================
// ========================================================================================
//							Commandes Working support
// ========================================================================================
// ========================================================================================
// == SetCurrent ==
CATShapeDesignCommandHeader.CATShapeDesignSetCurrentWS.Title          = "Set As Current";
CATShapeDesignCommandHeader.CATShapeDesignSetCurrentWS.Help           = "Sets the working support as current";
CATShapeDesignCommandHeader.CATShapeDesignSetCurrentWS.ShortHelp      = "Sets the working support as current";
CATShapeDesignCommandHeader.CATShapeDesignSetCurrentWS.LongHelp       = 
"Set As Current
Sets the working support as current.";
// == SetNoCurrent ==
CATShapeDesignCommandHeader.CATShapeDesignSetNotCurrentWS.Title       = "Set As Not Current";
CATShapeDesignCommandHeader.CATShapeDesignSetNotCurrentWS.Help        = "Sets the working support as not current";
CATShapeDesignCommandHeader.CATShapeDesignSetNotCurrentWS.ShortHelp   = "Sets the working support as not current";
CATShapeDesignCommandHeader.CATShapeDesignSetNotCurrentWS.LongHelp    = 
"Set As Not Current
Sets the working support as not current.";
// ==GetFeaturesOnSupport==
CATShapeDesignCommandHeader.CATShapeDesignGetFeaturesOnWS.Title          = "Get Features On Support";
CATShapeDesignCommandHeader.CATShapeDesignGetFeaturesOnWS.Help           = "Retrieves the features created on the working support";
CATShapeDesignCommandHeader.CATShapeDesignGetFeaturesOnWS.ShortHelp      = "Retrieves the features created on the working support";
CATShapeDesignCommandHeader.CATShapeDesignGetFeaturesOnWS.LongHelp       = 
"Get Features On Support
Retrieves the features created on the working support.";
// == OnSupport ==
CATShapeDesignCommandHeader.CATShapeDesignShowGrid.Title              = "Work on Support";
CATShapeDesignCommandHeader.CATShapeDesignShowGrid.Help               = "Allows working on support";
CATShapeDesignCommandHeader.CATShapeDesignShowGrid.ShortHelp          = "Work on Support";
CATShapeDesignCommandHeader.CATShapeDesignShowGrid.LongHelp           = 
"Work on Support
Allows working on a support plane or surface.";
// == OnSupport 3D==
CATShapeDesignCommandHeader.CATShapeDesignShow3DGrid.Title              = "Work on Support 3D";
CATShapeDesignCommandHeader.CATShapeDesignShow3DGrid.Help               = "Allows working on support 3D";
CATShapeDesignCommandHeader.CATShapeDesignShow3DGrid.ShortHelp          = "Work on Support 3D";
CATShapeDesignCommandHeader.CATShapeDesignShow3DGrid.LongHelp           = 
"Work on Support 3D
Allows working on a set of three support planes.";
// == Plane System ==
CATShapeDesignCommandHeader.CATSdwGridSetHdr.Title               = "Plane System...";
CATShapeDesignCommandHeader.CATSdwGridSetHdr.Help                = "Creates a plane system";
CATShapeDesignCommandHeader.CATSdwGridSetHdr.ShortHelp           = "Plane System";
CATShapeDesignCommandHeader.CATSdwGridSetHdr.LongHelp            = 
"Plane System
Creates a system of planes aggregated in subsets.";
// == Plane System Grid ==
CATShapeDesignCommandHeader.CATSdwGridSetGridHdr.Title               = "Plane System Grid...";
CATShapeDesignCommandHeader.CATSdwGridSetGridHdr.Help                = "Creates a plane system grid";
CATShapeDesignCommandHeader.CATSdwGridSetGridHdr.ShortHelp           = "Plane System Grid";
CATShapeDesignCommandHeader.CATSdwGridSetGridHdr.LongHelp            = 
"Plane System Grid
Creates a grid based on plane systems.";
// == OnSupport ==
CATShapeDesignCommandHeader.CATGSDShowGrid.Title                      = "Work on Support";
CATShapeDesignCommandHeader.CATGSDShowGrid.Help                       = "Allows working on support";
CATShapeDesignCommandHeader.CATGSDShowGrid.ShortHelp                  = "Work on Support";
CATShapeDesignCommandHeader.CATGSDShowGrid.LongHelp                   = 
"Work on Support
Allows working on a support plane or surface.";
// == OnSupport 3D ==
CATShapeDesignCommandHeader.CATGSDShow3DGrid.Title                      = "Work on Support 3D";
CATShapeDesignCommandHeader.CATGSDShow3DGrid.Help                       = "Allows working on support 3D";
CATShapeDesignCommandHeader.CATGSDShow3DGrid.ShortHelp                  = "Work on Support 3D";
CATShapeDesignCommandHeader.CATGSDShow3DGrid.LongHelp                   = 
"Work on Support 3D
Allows working on a set of three support planes.";
// == OnSupport Activity ==
CATShapeDesignCommandHeader.CATShapeDesignChangeActivityWS.Title      = "Working Supports Activity";
CATShapeDesignCommandHeader.CATShapeDesignChangeActivityWS.Help       = "Allows activating/deactivating working supports";
CATShapeDesignCommandHeader.CATShapeDesignChangeActivityWS.ShortHelp  = "Working Supports Activity";
CATShapeDesignCommandHeader.CATShapeDesignChangeActivityWS.LongHelp   = 
"Working Supports Activity
Allows deactivating current working support when nothing is selected,
or activating/deactivating selected working support";


//
// ========================================================================================
// ========================================================================================
//							Commande Produit Sectioning
// ========================================================================================
// ========================================================================================
// == InsertSection ==
CATShapeDesignCommandHeader.CATSdwInsertSectionHdr.Title               = "Insert Section";
CATShapeDesignCommandHeader.CATSdwInsertSectionHdr.Help                = "Inserts a Section in the Part";
CATShapeDesignCommandHeader.CATSdwInsertSectionHdr.ShortHelp           = "Insert Section";
CATShapeDesignCommandHeader.CATSdwInsertSectionHdr.LongHelp            = 
"Insert Section
Inserts a Section in the Part.";

// == EditSection ==
CATShapeDesignCommandHeader.CATSdwEditSectionHdr.Title                 = "Edit Section";
CATShapeDesignCommandHeader.CATSdwEditSectionHdr.Help                  = "Edit the Section components in Sketcher.";
CATShapeDesignCommandHeader.CATSdwEditSectionHdr.ShortHelp             = "Edit Section";
CATShapeDesignCommandHeader.CATSdwEditSectionHdr.LongHelp              = 
"Edit Section
Edit the Section components in Sketcher.";

// == ChangeBodySection ==
CATShapeDesignCommandHeader.CATSdwChangeBodySectionHdr.Title           = "Change Root Section...";
CATShapeDesignCommandHeader.CATSdwChangeBodySectionHdr.Help            = "Changes the father Section of current Section";
CATShapeDesignCommandHeader.CATSdwChangeBodySectionHdr.ShortHelp       = "Change Root Section";
CATShapeDesignCommandHeader.CATSdwChangeBodySectionHdr.LongHelp        = "Changes the father Section of current Section.";

// == GetComponentsSection ==
CATShapeDesignCommandHeader.CATSdwGetComponentsSectionHdr.Title        = "Get Section components";
CATShapeDesignCommandHeader.CATSdwGetComponentsSectionHdr.Help         = "Retrieves the Sections components.";
CATShapeDesignCommandHeader.CATSdwGetComponentsSectionHdr.ShortHelp    = "Get Section components";
CATShapeDesignCommandHeader.CATSdwGetComponentsSectionHdr.LongHelp     = "Retrieves the Sections components.";

// == DefineInWorkSection ==
CATShapeDesignCommandHeader.CATSdwDefineInWorkSectionHdr.Title         = "Define In Work Section";
CATShapeDesignCommandHeader.CATSdwDefineInWorkSectionHdr.Help          = "Defines a Section as In Work Object";
CATShapeDesignCommandHeader.CATSdwDefineInWorkSectionHdr.ShortHelp     = "Define a Section as In Work Object";
CATShapeDesignCommandHeader.CATSdwDefineInWorkSectionHdr.LongHelp      = "Defines a Section as In Work Object";

// == SectionTemporaryHide ==
CATShapeDesignCommandHeader.CATSdwSTHTemporaryHideHdr.Title            = "Display only Selected Elements";
CATShapeDesignCommandHeader.CATSdwSTHTemporaryHideHdr.Help             = "Temporarily displays only Selected Elements";
CATShapeDesignCommandHeader.CATSdwSTHTemporaryHideHdr.ShortHelp        = "Display only Selected Elements";
CATShapeDesignCommandHeader.CATSdwSTHTemporaryHideHdr.LongHelp         = "Temporarily filters the 3D view display showing only Selected Elements until Restore is called";

// == SectionTemporary Low Light No Pick ==
CATShapeDesignCommandHeader.CATSdwSTHTemporaryLLNPHdr.Title            = "Set pickable only Selected Elements";
CATShapeDesignCommandHeader.CATSdwSTHTemporaryLLNPHdr.Help             = "Temporarily sets pickable only Selected Elements.";
CATShapeDesignCommandHeader.CATSdwSTHTemporaryLLNPHdr.ShortHelp        = "Set pickable only Selected Elements";
CATShapeDesignCommandHeader.CATSdwSTHTemporaryLLNPHdr.LongHelp         = "Temporarily sets pickable only Selected Elements until Restore is called.";

// == SectionTHRestore ==
CATShapeDesignCommandHeader.CATSdwSTHRestoreHdr.Title                  = "Restore";
CATShapeDesignCommandHeader.CATSdwSTHRestoreHdr.Help                   = "Restores the display after a temporary visualization change.";
CATShapeDesignCommandHeader.CATSdwSTHRestoreHdr.ShortHelp              = "Restore the display";
CATShapeDesignCommandHeader.CATSdwSTHRestoreHdr.LongHelp               = "Restores the display after a temporary visualization change.";

// == SectionSearch ==
CATShapeDesignCommandHeader.CATSdwSectionSearchHdr.Title               = "Section Search";
CATShapeDesignCommandHeader.CATSdwSectionSearchHdr.Help                = "Searches elements through sections and attributes.";
CATShapeDesignCommandHeader.CATSdwSectionSearchHdr.ShortHelp           = "Section Search";
CATShapeDesignCommandHeader.CATSdwSectionSearchHdr.LongHelp            = "Searches elements through sections and attributes.";

// == UpdateSectionContainer ==
CATShapeDesignCommandHeader.CATSdwUpdateSectionContHdr.Title           = "Update Section Containers";
CATShapeDesignCommandHeader.CATSdwUpdateSectionContHdr.Help            = "Update all the section containers.";
CATShapeDesignCommandHeader.CATSdwUpdateSectionContHdr.ShortHelp       = "Update Section Containers";
CATShapeDesignCommandHeader.CATSdwUpdateSectionContHdr.LongHelp        = "Searches section containers and updates them.";

// == ConvertBodyToSection ==
CATShapeDesignCommandHeader.CATSdwConvertBodyToSectionHdr.Title        = "Convert Body to Section...";
CATShapeDesignCommandHeader.CATSdwConvertBodyToSection.Help            = "Converts Body to Section.";
CATShapeDesignCommandHeader.CATSdwConvertBodyToSection.ShortHelp       = "Convert Body to Section";
CATShapeDesignCommandHeader.CATSdwConvertBodyToSection.LongHelp        = "Converts a Body to a Section.";

//
// ========================================================================================
// ========================================================================================
//							Commandes 2D View Sectioning
// ========================================================================================
// ========================================================================================
// == Insert2DViewSection ==
CATShapeDesignCommandHeader.CATSdwInsert2DViewSectionHdr.Title         = "Insert 2D-View Section";
CATShapeDesignCommandHeader.CATSdwInsert2DViewSectionHdr.Help          = "Inserts a 2D-View Section in the Part";
CATShapeDesignCommandHeader.CATSdwInsert2DViewSectionHdr.ShortHelp     = "Insert 2D-View Section";
CATShapeDesignCommandHeader.CATSdwInsert2DViewSectionHdr.LongHelp      = 
"Insert 2D-View Section
Inserts a 2D-View Section in the Part.";

//
// ========================================================================================
// ========================================================================================
//										Mask
// ========================================================================================
// ========================================================================================
//
// == SetCurrent ==
CATShapeDesignCommandHeader.CATShapeDesignSetCurrentMask.Title          = "Set As Current";
CATShapeDesignCommandHeader.CATShapeDesignSetCurrentMask.Help           = "Sets the mask as current";
CATShapeDesignCommandHeader.CATShapeDesignSetCurrentMask.ShortHelp      = "Sets the mask as current";
CATShapeDesignCommandHeader.CATShapeDesignSetCurrentMask.LongHelp       = 
"Set As Current
Sets the mask as current.";
// == SetNoCurrent ==
CATShapeDesignCommandHeader.CATShapeDesignSetNotCurrentMask.Title       = "Set As Not Current";
CATShapeDesignCommandHeader.CATShapeDesignSetNotCurrentMask.Help        = "Sets the mask as not current";
CATShapeDesignCommandHeader.CATShapeDesignSetNotCurrentMask.ShortHelp   = "Sets the mask as not current";
CATShapeDesignCommandHeader.CATShapeDesignSetNotCurrentMask.LongHelp    = 
"Set As Not Current
Sets the mask as not current.";
// == Isolate ==
CATShapeDesignCommandHeader.CATShapeDesignIsolateMask.Title       = "Isolate";
CATShapeDesignCommandHeader.CATShapeDesignIsolateMask.Help        = "Removes the associativity with the point";
CATShapeDesignCommandHeader.CATShapeDesignIsolateMask.ShortHelp   = "Removes the associativity with the point";
CATShapeDesignCommandHeader.CATShapeDesignIsolateMask.LongHelp    = 
"Isolate
Removes the associativity with the point.";
// == CreateMask ==
CATShapeDesignCommandHeader.CATShapeDesignMaskHdr.Title              = "Mask...";
CATShapeDesignCommandHeader.CATShapeDesignMaskHdr.Help               = "Creates a mask";
CATShapeDesignCommandHeader.CATShapeDesignMaskHdr.ShortHelp          = "Mask";
CATShapeDesignCommandHeader.CATShapeDesignMaskHdr.LongHelp           = 
"Mask
Creates a mask.";
